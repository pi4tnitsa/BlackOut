#!/bin/bash

set -e

echo "üîß –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Nuclei Scanner"
echo "===================================="

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${BLUE}[INFO]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo ./quick-fix.sh"
    exit 1
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
APP_DIR="/opt/nuclei-admin"
APP_USER="nuclei"
DB_USER="nuclei_user"

# 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å Go –∏ Nuclei
fix_nuclei() {
    print_status "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Nuclei..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    ARCH=$(uname -m)
    case $ARCH in
        x86_64) NUCLEI_ARCH="linux_amd64" ;;
        aarch64|arm64) NUCLEI_ARCH="linux_arm64" ;;
        *) print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"; exit 1 ;;
    esac
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nuclei –Ω–∞–ø—Ä—è–º—É—é
    NUCLEI_VERSION="v3.1.4"
    NUCLEI_URL="https://github.com/projectdiscovery/nuclei/releases/download/${NUCLEI_VERSION}/nuclei_${NUCLEI_VERSION#v}_${NUCLEI_ARCH}.zip"
    
    cd /tmp
    print_status "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ Nuclei ${NUCLEI_VERSION}..."
    curl -L -o nuclei.zip "$NUCLEI_URL" || {
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Nuclei"
        exit 1
    }
    
    unzip -o nuclei.zip
    chmod +x nuclei
    mv nuclei /usr/local/bin/
    rm -f nuclei.zip README.md LICENSE.md
    
    if nuclei -version >/dev/null 2>&1; then
        print_success "Nuclei —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(nuclei -version)"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Nuclei"
        exit 1
    fi
}

# 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
fix_database() {
    print_status "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
    if ! systemctl is-active postgresql >/dev/null 2>&1; then
        print_status "–ó–∞–ø—É—Å–∫ PostgreSQL..."
        systemctl start postgresql
        systemctl enable postgresql
    fi
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
    DB_PASSWORD=$(openssl rand -base64 32)
    
    # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    sudo -u postgres psql << EOF
-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
DROP USER IF EXISTS $DB_USER;

-- –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';
ALTER USER $DB_USER CREATEDB;

-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±–∞–∑—ã –µ—Å–ª–∏ –µ—Å—Ç—å
DROP DATABASE IF EXISTS nuclei_scanner_belarus;
DROP DATABASE IF EXISTS nuclei_scanner_russia;
DROP DATABASE IF EXISTS nuclei_scanner_kazakhstan;

-- –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
CREATE DATABASE nuclei_scanner_belarus OWNER $DB_USER;
CREATE DATABASE nuclei_scanner_russia OWNER $DB_USER;
CREATE DATABASE nuclei_scanner_kazakhstan OWNER $DB_USER;

-- –î–∞—ë–º –ø—Ä–∞–≤–∞
GRANT ALL PRIVILEGES ON DATABASE nuclei_scanner_belarus TO $DB_USER;
GRANT ALL PRIVILEGES ON DATABASE nuclei_scanner_russia TO $DB_USER;
GRANT ALL PRIVILEGES ON DATABASE nuclei_scanner_kazakhstan TO $DB_USER;
\q
EOF

    if [ $? -eq 0 ]; then
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å
        echo "DB_PASSWORD=$DB_PASSWORD" > /etc/nuclei-admin.env
        chmod 600 /etc/nuclei-admin.env
        print_success "–ü–∞—Ä–æ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ /etc/nuclei-admin.env"
        
        return 0
    else
        print_error "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        return 1
    fi
}

# 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º .env —Ñ–∞–π–ª
fix_env_file() {
    print_status "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–æ–ª—å
    if [ -f /etc/nuclei-admin.env ]; then
        source /etc/nuclei-admin.env
    else
        print_error "–§–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    SECRET_KEY=$(openssl rand -base64 64)
    
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π .env —Ñ–∞–π–ª
    cat > "$APP_DIR/.env" << EOF
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nuclei Scanner
SECRET_KEY='$SECRET_KEY'

# –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_BELARUS=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/nuclei_scanner_belarus
DB_RUSSIA=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/nuclei_scanner_russia
DB_KAZAKHSTAN=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/nuclei_scanner_kazakhstan
CURRENT_DB=belarus

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
ADMIN_USER=admin
ADMIN_PASS=admin123

# SSH –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–æ—Ä–∫–µ—Ä–æ–≤
SSH_USER=root
SSH_KEY_PATH=/home/$APP_USER/.ssh/id_rsa

# Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
DEBUG=False
PORT=5000
EOF

    chown "$APP_USER:$APP_USER" "$APP_DIR/.env"
    chmod 600 "$APP_DIR/.env"
    
    print_success ".env —Ñ–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
}

# 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º python-dotenv –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
fix_python_deps() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [ ! -f "$APP_DIR/venv/bin/pip" ]; then
        print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ $APP_DIR/venv"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º python-dotenv
    sudo -u "$APP_USER" "$APP_DIR/venv/bin/pip" install python-dotenv || {
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å python-dotenv"
        return 1
    }
    
    print_success "Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
test_database() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    source /etc/nuclei-admin.env
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    sudo -u postgres psql -h localhost -U $DB_USER -d nuclei_scanner_belarus -c "SELECT 1;" << EOF
$DB_PASSWORD
EOF

    if [ $? -eq 0 ]; then
        print_success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 0
    else
        print_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        return 1
    fi
}

# 6. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
test_app() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    cd "$APP_DIR"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    sudo -u "$APP_USER" timeout 10 "$APP_DIR/venv/bin/python" -c "
import sys
sys.path.insert(0, '.')
from app import create_app, db

try:
    app = create_app()
    with app.app_context():
        db.create_all()
        print('SUCCESS: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')
except Exception as e:
    print(f'ERROR: {e}')
    sys.exit(1)
" 2>/dev/null

    if [ $? -eq 0 ]; then
        print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        print_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"
        return 1
    fi
}

# 7. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
restart_services() {
    print_status "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º supervisor
    supervisorctl stop nuclei-admin 2>/dev/null || true
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º supervisor
    systemctl restart supervisor 2>/dev/null || true
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    supervisorctl reread 2>/dev/null || true
    supervisorctl update 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    supervisorctl start nuclei-admin 2>/dev/null || true
    
    print_success "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_status "–ù–∞—á–∞–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if [ ! -d "$APP_DIR" ]; then
        print_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $APP_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ deploy-admin.sh"
        exit 1
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É
    echo
    print_status "1/6 –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Nuclei..."
    fix_nuclei
    
    echo
    print_status "2/6 –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    fix_database || {
        print_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    }
    
    echo
    print_status "3/6 –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    fix_env_file
    
    echo
    print_status "4/6 –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    fix_python_deps
    
    echo
    print_status "5/6 –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    test_database
    
    echo
    print_status "6/6 –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    test_app
    
    echo
    print_status "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    restart_services
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo
    print_success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo "=================================="
    echo
    echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"
    echo "   ‚Ä¢ URL: http://$(hostname -I | awk '{print $1}'):5000"
    echo "   ‚Ä¢ –õ–æ–≥–∏–Ω: admin"
    echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å: admin123"
    echo
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å: supervisorctl status nuclei-admin"
    echo "   ‚Ä¢ –õ–æ–≥–∏: tail -f $APP_DIR/logs/gunicorn.log"
    echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: supervisorctl restart nuclei-admin"
    echo
    echo "üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
    echo "   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $DB_USER"
    echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å: —Å–º. /etc/nuclei-admin.env"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 3
    if supervisorctl status nuclei-admin 2>/dev/null | grep -q "RUNNING"; then
        print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    else
        print_warning "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –µ—â—ë –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥:"
        echo "           supervisorctl status nuclei-admin"
    fi
}

# –ó–∞–ø—É—Å–∫
main "$@"