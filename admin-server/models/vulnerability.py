# models/vulnerability.py - Модель уязвимостей
from dataclasses import dataclass
from datetime import datetime
from typing import Optional, List
import ipaddress

@dataclass
class Vulnerability:
    """Модель уязвимости"""
    id: Optional[int] = None
    ip_address: str = None
    template_method: Optional[str] = None
    connection_method: Optional[str] = None
    severity_level: Optional[str] = None
    url: Optional[str] = None
    additional_info: Optional[str] = None
    source_host_id: Optional[int] = None
    timestamp: Optional[datetime] = None
    
    def __post_init__(self):
        """Валидация данных после инициализации"""
        if self.ip_address:
            try:
                ipaddress.ip_address(self.ip_address)
            except ValueError:
                raise ValueError(f"Некорректный IP-адрес: {self.ip_address}")
        
        if self.severity_level and self.severity_level not in ['info', 'low', 'medium', 'high', 'critical']:
            raise ValueError(f"Некорректный уровень критичности: {self.severity_level}")
    
    @classmethod
    def from_dict(cls, data: dict):
        """Создание объекта из словаря"""
        return cls(
            id=data.get('id'),
            ip_address=str(data.get('ip_address', '')),
            template_method=data.get('template_method'),
            connection_method=data.get('connection_method'),
            severity_level=data.get('severity_level'),
            url=data.get('url'),
            additional_info=data.get('additional_info'),
            source_host_id=data.get('source_host_id'),
            timestamp=data.get('timestamp')
        )
    
    def to_dict(self) -> dict:
        """Преобразование в словарь"""
        return {
            'id': self.id,
            'ip_address': self.ip_address,
            'template_method': self.template_method,
            'connection_method': self.connection_method,
            'severity_level': self.severity_level,
            'url': self.url,
            'additional_info': self.additional_info,
            'source_host_id': self.source_host_id,
            'timestamp': self.timestamp
        }

